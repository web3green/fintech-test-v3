
import { Button } from '@/components/ui/button';
import { Globe } from 'lucide-react';
import { useLanguage } from '@/contexts/LanguageContext';
import { useEffect, useState, useRef } from 'react';
import { toast } from '@/components/ui/use-toast';

export function LanguageToggle() {
  const { language, setLanguage } = useLanguage();
  const [animating, setAnimating] = useState(false);
  const lastUpdateRef = useRef<number>(0);
  
  // –£—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
  const toggleLanguage = () => {
    if (animating) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–ª–∏–∫–∏
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ (–º–∏–Ω–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥–∞ –º–µ–∂–¥—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–º–∏)
    const now = Date.now();
    if (now - lastUpdateRef.current < 1000) {
      console.log('üåç –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
      return;
    }
    
    lastUpdateRef.current = now;
    setAnimating(true);
    
    const newLanguage = language === 'en' ? 'ru' : 'en';
    console.log(`üåç –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞: ${language} -> ${newLanguage}`);
    
    // –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–∏–º localStorage –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    try {
      localStorage.setItem('language', newLanguage);
      // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–µ
      localStorage.setItem('language_updated', Date.now().toString());
    } catch (e) {
      console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –≤ localStorage:', e);
    }
    
    // –ó–∞—Ç–µ–º –≤—ã–∑–æ–≤–µ–º setLanguage –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    setLanguage(newLanguage);
    
    // –î–æ–±–∞–≤–∏–º —Ç–∞–∫–∂–µ –∞—Ç—Ä–∏–±—É—Ç—ã –∫ HTML –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ —Å—Ç–∏–ª–µ–π
    document.documentElement.setAttribute('lang', newLanguage);
    document.documentElement.setAttribute('data-language', newLanguage);
    
    // –í—ã–∑–æ–≤–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    window.dispatchEvent(new CustomEvent('language:changed', { 
      detail: { language: newLanguage, timestamp: Date.now() } 
    }));
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π)
    document.querySelectorAll('link[rel="stylesheet"]').forEach(linkEl => {
      if (linkEl instanceof HTMLLinkElement && linkEl.href) {
        try {
          const url = new URL(linkEl.href);
          url.searchParams.set('_lang', `${newLanguage}_${Date.now()}`);
          
          // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∏–ª—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
          const newLink = document.createElement('link');
          newLink.rel = 'stylesheet';
          newLink.href = url.toString();
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞
          newLink.onload = () => {
            try {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –µ—â–µ –≤ DOM –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
              if (linkEl.parentNode) {
                linkEl.parentNode.removeChild(linkEl);
              }
            } catch (e) {
              console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Å—Ç–∏–ª—å:', e);
            }
          };
          
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
          if (document.head) {
            document.head.appendChild(newLink);
          }
        } catch (e) {
          console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–ª—è:', e);
        }
      }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    toast({
      title: newLanguage === 'ru' ? "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π" : "Language changed to English",
      duration: 2000,
    });
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    setTimeout(() => {
      try {
        document.documentElement.style.opacity = '0.99';
        setTimeout(() => {
          document.documentElement.style.opacity = '1';
          
          // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è
          try {
            const forceStyle = document.createElement('style');
            forceStyle.textContent = `
              [data-language="${newLanguage}"] * {
                animation: lang-update 1ms;
              }
              @keyframes lang-update {
                from { opacity: 0.99; }
                to { opacity: 1; }
              }
            `;
            
            if (document.head) {
              document.head.appendChild(forceStyle);
              
              // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
              document.querySelectorAll('[data-language]').forEach(el => {
                try {
                  el.setAttribute('data-language-change', Date.now().toString());
                } catch (e) {
                  console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç:', e);
                }
              });
              
              // –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞ –≥–ª—É–±–∂–µ –≤ DOM
              document.querySelectorAll('.force-update-on-language-change').forEach(el => {
                try {
                  // –°–æ–∑–¥–∞–¥–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π DOM-—ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
                  const trigger = document.createElement('span');
                  trigger.className = 'language-update-trigger';
                  trigger.style.display = 'none';
                  trigger.dataset.timestamp = Date.now().toString();
                  
                  // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                  if (el.isConnected) {
                    el.appendChild(trigger);
                    
                    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç, –Ω–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
                    setTimeout(() => {
                      if (trigger.parentNode) {
                        trigger.parentNode.removeChild(trigger);
                      }
                    }, 100);
                  }
                  
                  // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–∏–º –ª—é–±—ã–µ –∫–ª—é—á–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
                  if (el.hasAttribute('key')) {
                    el.setAttribute('key', `${el.getAttribute('key')}-${Date.now()}`);
                  }
                } catch (e) {
                  console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', e);
                }
              });
              
              // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
              setTimeout(() => {
                if (forceStyle.parentNode) {
                  forceStyle.parentNode.removeChild(forceStyle);
                }
                setAnimating(false);
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                if (document.documentElement.getAttribute('lang') !== newLanguage) {
                  console.warn('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —è–∑—ã–∫–æ–≤ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º...');
                  document.documentElement.setAttribute('lang', newLanguage);
                  document.documentElement.setAttribute('data-language', newLanguage);
                }
                
                // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –æ–±—Ö–æ–¥ DOM –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                try {
                  document.querySelectorAll('[data-i18n]').forEach(el => {
                    el.setAttribute('data-i18n-updated', Date.now().toString());
                  });
                } catch (e) {
                  console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ data-i18n —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', e);
                }
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                window.dispatchEvent(new Event('forceRender'));
              }, 1000);
            }
          } catch (e) {
            console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è:', e);
            setAnimating(false);
          }
        }, 100);
      } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–ª–µ–π:', e);
        setAnimating(false);
      }
    }, 100);
  };
  
  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ —Ñ–æ–∫—É—Å–µ –æ–∫–Ω–∞
  useEffect(() => {
    const syncLanguage = () => {
      try {
        const storedLang = localStorage.getItem('language');
        if (storedLang && storedLang !== language && (storedLang === 'en' || storedLang === 'ru')) {
          console.log(`üåç LanguageToggle: –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —è–∑—ã–∫–∞. Storage: ${storedLang}, Context: ${language}`);
          setLanguage(storedLang as 'en' | 'ru');
          
          // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ HTML —Ç–∞–∫–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
          if (document.documentElement.getAttribute('lang') !== storedLang) {
            document.documentElement.setAttribute('lang', storedLang);
            document.documentElement.setAttribute('data-language', storedLang);
          }
        }
      } catch (e) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –∏–∑ localStorage:', e);
      }
    };

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    syncLanguage();
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const handleVisibilityChange = () => {
      if (document.visibilityState === 'visible') {
        console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –≤–∏–¥–∏–º–æ–π - –ø—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫');
        syncLanguage();
      }
    };
    
    document.addEventListener('visibilitychange', handleVisibilityChange);
    
    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    // –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    const timeoutId = setTimeout(syncLanguage, 2000);
    
    return () => {
      document.removeEventListener('visibilitychange', handleVisibilityChange);
      clearTimeout(timeoutId);
    };
  }, [language, setLanguage]);
  
  return (
    <Button 
      variant="ghost" 
      size="sm" 
      onClick={toggleLanguage}
      disabled={animating}
      className="flex items-center gap-2 transition-all duration-300"
      data-language={language}
      aria-label={language === 'en' ? "Switch to Russian" : "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π"}
    >
      <Globe className="w-4 h-4" />
      <span className="text-sm font-medium">
        {language === 'en' ? 'EN' : 'RU'}
      </span>
    </Button>
  );
}
